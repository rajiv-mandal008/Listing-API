// <auto-generated />
using Aryeo_Listing_Api.Provider;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aryeo_Listing_Api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aryeo_Listing_Api.Model.AddressDetails", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City_Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country_Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County_Or_Parish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IS_Map_Dirty")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Postal_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State_Or_Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State_Or_Province_Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unparsed_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AddressDetails");
                });

            modelBuilder.Entity("Aryeo_Listing_Api.Model.BuildingDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bathrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bedrooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Square_Feet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year_Built")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuildingDetails");
                });

            modelBuilder.Entity("Aryeo_Listing_Api.Model.ListingDetails", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("BuildingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Downloads_Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Floor_Plans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interactive_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Large_Thumbnail_URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("List_Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LotId")
                        .HasColumnType("bigint");

                    b.Property<string>("Mls_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Standard_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thumbnail_URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("LotId");

                    b.ToTable("ListingDetails");
                });

            modelBuilder.Entity("Aryeo_Listing_Api.Model.LotDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Lot_Open_Parking_Spaces")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lot_Size_Acres")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LotDetails");
                });

            modelBuilder.Entity("Aryeo_Listing_Api.Model.ListingDetails", b =>
                {
                    b.HasOne("Aryeo_Listing_Api.Model.AddressDetails", "Address")
                        .WithMany("ListingDetails")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aryeo_Listing_Api.Model.BuildingDetails", "Building")
                        .WithMany("ListingDetails")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aryeo_Listing_Api.Model.LotDetails", "LotDetails")
                        .WithMany("ListingDetails")
                        .HasForeignKey("LotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Building");

                    b.Navigation("LotDetails");
                });

            modelBuilder.Entity("Aryeo_Listing_Api.Model.AddressDetails", b =>
                {
                    b.Navigation("ListingDetails");
                });

            modelBuilder.Entity("Aryeo_Listing_Api.Model.BuildingDetails", b =>
                {
                    b.Navigation("ListingDetails");
                });

            modelBuilder.Entity("Aryeo_Listing_Api.Model.LotDetails", b =>
                {
                    b.Navigation("ListingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
